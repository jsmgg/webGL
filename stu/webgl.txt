1、获取上下文
var ele = document.getElementById( 'js_canvas' ),
    attributes = {
        alpha: false,//是否可以设置透明
        depth: true,//深度缓存
        stencil: true,//模板缓存
        antialias: true,//去锯齿
        premultipliedAlpha: true,
        preserveDrawingBuffer: false //是否清除图片缓冲区
    };
var gl = ele.getContext( 'webgl' , attributes ) || ele.getContext( 'experimental-webgl' , attributes );
2、 创建着色器

vertexShaderSource = [
    'attribute vec4 a_Position;',
    'attribute vec4 a_Color;',
    'varying vec4 v_Color;',
    'void main(){',
    ' gl_Position = a_Position;',
    ' v_Color = a_Color;',
    '}'
].join('\n'),
fragmentShaderSource = [
    'precision mediump float;',
    'varying vec4 v_Color;',
    'void main(){',
    ' gl_FragColor = v_Color;',
    '}'
].join('\n'),

var vertexShader = gl.createShader(gl.FRAGMENT_SHADER);//顶点着色器
gl.shaderSource(vertexShader, vertexShaderSource);//绑定代码
gl.compileShader(vertexShader);//编译

fragmentShader = gl.createShader(gl.VERTEX_SHADER);//片源着色器
gl.shaderSource(fragmentShader, fragmentShaderSource);//绑定代码
gl.compileShader(fragmentShader);//编译

if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {//获取错误信息
    alert(gl.getShaderInfoLog(shader));
}

3、创建程序对象
program = gl.createProgram();
gl.attachShader(program, vertexShader);
gl.attachShader(program, fragmentShader);
gl.linkProgram(program);
gl.useProgram( program );

4、创建顶点缓冲区
vertexBuffer = gl.createBuffer();
gl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );//绑定缓冲区
gl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);//绑定数据 vertices 顶点坐标数据

varindex = gl.getAttribLocation(program, 'a_Position');//获取顶点变量索引值
gl.vertexAttribPointer( varindex, 3, gl.FLOAT, false,  0, 0);//设置顶点缓冲区
gl.enableVertexAttribArray( varindex );//开启变量

gl.drawArrays( gl.TRIANGLES, 0, 3);//渲染,从第0个点开始，3顶点总数







2、三彩三角形
http://group.testing.amap.com/zhiming.hu/test/8.html

3、正方形+2d纹理
http://group.testing.amap.com/zhiming.hu/test/9.html

4、矩阵转换
http://group.testing.amap.com/zhiming.hu/test/11.html

5、立方体、光照
http://group.testing.amap.com/zhiming.hu/test/20.html

